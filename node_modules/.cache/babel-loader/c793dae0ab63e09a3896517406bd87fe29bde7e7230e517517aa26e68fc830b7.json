{"ast":null,"code":"import { createStore } from \"redux\";\nexport const calculatorActionTypes = {\n  ADD: 'ADD',\n  SUBTRACT: \"SUBTRACT\",\n  DIVIDE: \"DIVIDE\",\n  MULTIPLY: \"MULTIPLY\"\n};\nconst initialState = {\n  result: 0\n};\nconst calculatorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case calculatorActionTypes.ADD:\n      return {\n        ...state,\n        result: state.result + action.payload\n      };\n    case calculatorActionTypes.SUBTRACT:\n      return {\n        ...state,\n        result: state.result - action.payload\n      };\n    case calculatorActionTypes.MULTIPLY:\n      return {\n        ...state,\n        result: state.result * action.payload\n      };\n    case calculatorActionTypes.DIVIDE:\n      return {\n        ...state,\n        result: state.result / action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const store = createStore(calculatorReducer);\nstore.subscribe(() => {\n  console.log(\"STORE CHANGED\", store.getState());\n});","map":{"version":3,"names":["createStore","calculatorActionTypes","ADD","SUBTRACT","DIVIDE","MULTIPLY","initialState","result","calculatorReducer","state","action","type","payload","store","subscribe","console","log","getState"],"sources":["C:/Users/Lenovo/Desktop/redux-starter/01-starting-project/src/store/index.js"],"sourcesContent":["import {createStore} from \"redux\";\r\n\r\n\r\nexport const calculatorActionTypes = {\r\n    ADD:'ADD',\r\n    SUBTRACT:\"SUBTRACT\",\r\n    DIVIDE:\"DIVIDE\",\r\n    MULTIPLY:\"MULTIPLY\"\r\n}\r\n\r\nconst initialState = {\r\n    result: 0\r\n}\r\n\r\nconst calculatorReducer = (state= initialState, action)=>{\r\n\r\n    switch(action.type) {\r\n      case calculatorActionTypes.ADD:\r\n        return {\r\n            ...state,\r\n            result:state.result + action.payload,\r\n        }\r\n\r\n        case calculatorActionTypes.SUBTRACT:\r\n            return {\r\n                ...state,\r\n                result:state.result - action.payload,\r\n            }\r\n            case calculatorActionTypes.MULTIPLY:\r\n                return {\r\n                    ...state,\r\n                    result:state.result* action.payload,\r\n                }\r\n                case calculatorActionTypes.DIVIDE:\r\n                    return {\r\n                        ...state,\r\n                        result:state.result / action.payload,\r\n                    }\r\n        default:\r\n\r\n            return state\r\n    }\r\n   \r\n}\r\n\r\n\r\n export const store = createStore(calculatorReducer);\r\n\r\nstore.subscribe(()=>{\r\n    console.log(\"STORE CHANGED\", store.getState());\r\n})"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AAGjC,OAAO,MAAMC,qBAAqB,GAAG;EACjCC,GAAG,EAAC,KAAK;EACTC,QAAQ,EAAC,UAAU;EACnBC,MAAM,EAAC,QAAQ;EACfC,QAAQ,EAAC;AACb,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,iBAAiB,GAAG,YAA+B;EAAA,IAA9BC,KAAK,uEAAEH,YAAY;EAAA,IAAEI,MAAM;EAElD,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAKV,qBAAqB,CAACC,GAAG;MAC5B,OAAO;QACH,GAAGO,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IAED,KAAKX,qBAAqB,CAACE,QAAQ;MAC/B,OAAO;QACH,GAAGM,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IACD,KAAKX,qBAAqB,CAACI,QAAQ;MAC/B,OAAO;QACH,GAAGI,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAEG,MAAM,CAACE;MAChC,CAAC;IACD,KAAKX,qBAAqB,CAACG,MAAM;MAC7B,OAAO;QACH,GAAGK,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IACb;MAEI,OAAOH,KAAK;EAAA;AAGxB,CAAC;AAGA,OAAO,MAAMI,KAAK,GAAGb,WAAW,CAACQ,iBAAiB,CAAC;AAEpDK,KAAK,CAACC,SAAS,CAAC,MAAI;EAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,KAAK,CAACI,QAAQ,EAAE,CAAC;AAClD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}