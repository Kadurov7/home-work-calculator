{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const calculatorActionTypes = {\n  ADD: 'ADD',\n  SUBTRACT: \"SUBTRACT\",\n  DIVIDE: \"DIVIDE\",\n  MULTIPLY: \"MULTIPLY\"\n};\nconst initialState = {\n  result: 0\n};\nexport const calculatorSlice = createSlice({\n  reducers: {\n    add(state, action) {\n      state.result += action.payload;\n    }\n  }\n});\nexport const calculatorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case calculatorActionTypes.ADD:\n      return {\n        ...state,\n        result: state.result + action.payload\n      };\n    case calculatorActionTypes.SUBTRACT:\n      return {\n        ...state,\n        result: state.result - action.payload\n      };\n    case calculatorActionTypes.MULTIPLY:\n      return {\n        ...state,\n        result: state.result * action.payload\n      };\n    case calculatorActionTypes.DIVIDE:\n      return {\n        ...state,\n        result: state.result / action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["createSlice","calculatorActionTypes","ADD","SUBTRACT","DIVIDE","MULTIPLY","initialState","result","calculatorSlice","reducers","add","state","action","payload","calculatorReducer","type"],"sources":["C:/Users/Lenovo/Desktop/HW-20-calculate/home-work-redux/src/store/calculator/calculatorSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const calculatorActionTypes = {\r\n    ADD:'ADD',\r\n    SUBTRACT:\"SUBTRACT\",\r\n    DIVIDE:\"DIVIDE\",\r\n    MULTIPLY:\"MULTIPLY\"\r\n}\r\n\r\nconst initialState = {\r\n    result: 0\r\n}\r\n\r\n\r\nexport const calculatorSlice = createSlice({\r\n    reducers:{\r\n        add(state, action){\r\n             state.result += action.payload\r\n        }\r\n        \r\n    }\r\n})\r\n\r\nexport const calculatorReducer = (state= initialState, action)=>{\r\n\r\n    switch(action.type) {\r\n      case calculatorActionTypes.ADD:\r\n        return {\r\n            ...state,\r\n            result:state.result + action.payload,\r\n        }\r\n\r\n        case calculatorActionTypes.SUBTRACT:\r\n            return {\r\n                ...state,\r\n                result:state.result - action.payload,\r\n            }\r\n            case calculatorActionTypes.MULTIPLY:\r\n                return {\r\n                    ...state,\r\n                    result:state.result* action.payload,\r\n                }\r\n                case calculatorActionTypes.DIVIDE:\r\n                    return {\r\n                        ...state,\r\n                        result:state.result / action.payload,\r\n                    }\r\n        default:\r\n\r\n            return state\r\n    }\r\n   \r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,qBAAqB,GAAG;EACjCC,GAAG,EAAC,KAAK;EACTC,QAAQ,EAAC,UAAU;EACnBC,MAAM,EAAC,QAAQ;EACfC,QAAQ,EAAC;AACb,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE;AACZ,CAAC;AAGD,OAAO,MAAMC,eAAe,GAAGR,WAAW,CAAC;EACvCS,QAAQ,EAAC;IACLC,GAAG,CAACC,KAAK,EAAEC,MAAM,EAAC;MACbD,KAAK,CAACJ,MAAM,IAAIK,MAAM,CAACC,OAAO;IACnC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAG,YAA+B;EAAA,IAA9BH,KAAK,uEAAEL,YAAY;EAAA,IAAEM,MAAM;EAEzD,QAAOA,MAAM,CAACG,IAAI;IAChB,KAAKd,qBAAqB,CAACC,GAAG;MAC5B,OAAO;QACH,GAAGS,KAAK;QACRJ,MAAM,EAACI,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC;MACjC,CAAC;IAED,KAAKZ,qBAAqB,CAACE,QAAQ;MAC/B,OAAO;QACH,GAAGQ,KAAK;QACRJ,MAAM,EAACI,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC;MACjC,CAAC;IACD,KAAKZ,qBAAqB,CAACI,QAAQ;MAC/B,OAAO;QACH,GAAGM,KAAK;QACRJ,MAAM,EAACI,KAAK,CAACJ,MAAM,GAAEK,MAAM,CAACC;MAChC,CAAC;IACD,KAAKZ,qBAAqB,CAACG,MAAM;MAC7B,OAAO;QACH,GAAGO,KAAK;QACRJ,MAAM,EAACI,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC;MACjC,CAAC;IACb;MAEI,OAAOF,KAAK;EAAA;AAGxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}